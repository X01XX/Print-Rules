$ gcl
GCL (GNU Common Lisp)  2.6.12 CLtL1    Fri Apr 22 15:51:11 UTC 2016
Source License: LGPL(gcl,gmp), GPL(unexec,bfd,xgcl)
Binary License:  GPL due to GPL'ed components: (XGCL READLINE UNEXEC)
Modifications of this banner must retain notice of a compatible license
Dedicated to the memory of W. Schelter

Use (help) to get some basic information on how to use GCL.
Temporary directory for compiler files:
/tmp/

>(load #p "main.lisp")
;; Loading #p"main.lisp"
;; Loading #p"value.lisp"
;; Finished loading #p"value.lisp"
;; Loading #p"region.lisp"
;; Finished loading #p"region.lisp"
;; Loading #p"rule.lisp"
;; Finished loading #p"rule.lisp"
;; Loading #p"rulelist.lisp"
;; Finished loading #p"rulelist.lisp"
;; Loading #p"any1ofeach.lisp"
;; Finished loading #p"any1ofeach.lisp"
;; Loading #p"anyxofn.lisp"
;; Finished loading #p"anyxofn.lisp"
Value number bits 2 all bits 11 msb 10 not msb 01
 
Rules:
    [00/00]
    [00/01]
    [00/11]
    [00/10]
    [01/00]
    [01/01]
    [01/11]
    [01/10]
    [11/00]
    [11/01]
    [11/11]
    [11/10]
    [10/00]
    [10/01]
    [10/11]
    [10/10]
Number rules = 16
 
Rule pairs (same initial state, different results):
    ([10/10] [10/11])
    ([10/10] [11/10])
    ([10/10] [11/11])
    ([10/11] [11/10])
    ([10/11] [11/11])
    ([10/01] [10/00])
    ([10/01] [11/01])
    ([10/01] [11/00])
    ([10/00] [11/01])
    ([10/00] [11/00])
    ([11/10] [11/11])
    ([11/01] [11/00])
    ([01/10] [01/11])
    ([01/10] [00/10])
    ([01/10] [00/11])
    ([01/11] [00/10])
    ([01/11] [00/11])
    ([01/01] [01/00])
    ([01/01] [00/01])
    ([01/01] [00/00])
    ([01/00] [00/01])
    ([01/00] [00/00])
    ([00/10] [00/11])
    ([00/01] [00/00])
Number rule pairs = 24
 
Rule unions:
    [10/10] u [10/01] = [10/Xx]
    [10/10] u [10/00] = [10/X0]
    [10/10] u [01/10] = [Xx/10]
    [10/10] u [01/01] = [Xx/Xx]
    [10/10] u [01/00] = [Xx/X0]
    [10/10] u [00/10] = [X0/10]
    [10/10] u [00/01] = [X0/Xx]
    [10/10] u [00/00] = [X0/X0]
    [10/11] u [10/01] = [10/X1]
    [10/11] u [10/00] = [10/XX]
    [10/11] u [01/11] = [Xx/11]
    [10/11] u [01/01] = [Xx/X1]
    [10/11] u [01/00] = [Xx/XX]
    [10/11] u [00/11] = [X0/11]
    [10/11] u [00/01] = [X0/X1]
    [10/11] u [00/00] = [X0/XX]
    [10/01] u [01/10] = [Xx/Xx]
    [10/01] u [01/11] = [Xx/X1]
    [10/01] u [01/01] = [Xx/01]
    [10/01] u [00/10] = [X0/Xx]
    [10/01] u [00/11] = [X0/X1]
    [10/01] u [00/01] = [X0/01]
    [10/00] u [01/10] = [Xx/X0]
    [10/00] u [01/11] = [Xx/XX]
    [10/00] u [01/00] = [Xx/00]
    [10/00] u [00/10] = [X0/X0]
    [10/00] u [00/11] = [X0/XX]
    [10/00] u [00/00] = [X0/00]
    [11/10] u [11/01] = [11/Xx]
    [11/10] u [11/00] = [11/X0]
    [11/10] u [01/10] = [X1/10]
    [11/10] u [01/01] = [X1/Xx]
    [11/10] u [01/00] = [X1/X0]
    [11/10] u [00/10] = [XX/10]
    [11/10] u [00/01] = [XX/Xx]
    [11/10] u [00/00] = [XX/X0]
    [11/11] u [11/01] = [11/X1]
    [11/11] u [11/00] = [11/XX]
    [11/11] u [01/11] = [X1/11]
    [11/11] u [01/01] = [X1/X1]
    [11/11] u [01/00] = [X1/XX]
    [11/11] u [00/11] = [XX/11]
    [11/11] u [00/01] = [XX/X1]
    [11/11] u [00/00] = [XX/XX]
    [11/01] u [01/10] = [X1/Xx]
    [11/01] u [01/11] = [X1/X1]
    [11/01] u [01/01] = [X1/01]
    [11/01] u [00/10] = [XX/Xx]
    [11/01] u [00/11] = [XX/X1]
    [11/01] u [00/01] = [XX/01]
    [11/00] u [01/10] = [X1/X0]
    [11/00] u [01/11] = [X1/XX]
    [11/00] u [01/00] = [X1/00]
    [11/00] u [00/10] = [XX/X0]
    [11/00] u [00/11] = [XX/XX]
    [11/00] u [00/00] = [XX/00]
    [01/10] u [01/01] = [01/Xx]
    [01/10] u [01/00] = [01/X0]
    [01/11] u [01/01] = [01/X1]
    [01/11] u [01/00] = [01/XX]
    [00/10] u [00/01] = [00/Xx]
    [00/10] u [00/00] = [00/X0]
    [00/11] u [00/01] = [00/X1]
    [00/11] u [00/00] = [00/XX]
Number rule unions = 64
 
Rule pair unions:
    ([00/01] [00/00]) u ([11/01] [11/00]) = ([XX/01] [XX/00])
    ([00/01] [00/00]) u ([10/00] [11/01]) = ([XX/01] [X0/00])
    ([00/01] [00/00]) u ([10/01] [11/00]) = ([X0/01] [XX/00])
    ([00/01] [00/00]) u ([10/01] [10/00]) = ([X0/01] [X0/00])
    ([00/10] [00/11]) u ([11/10] [11/11]) = ([XX/10] [XX/11])
    ([00/10] [00/11]) u ([10/11] [11/10]) = ([XX/10] [X0/11])
    ([00/10] [00/11]) u ([10/10] [11/11]) = ([X0/10] [XX/11])
    ([00/10] [00/11]) u ([10/10] [10/11]) = ([X0/10] [X0/11])
    ([01/00] [00/00]) u ([01/11] [00/11]) = ([01/XX] [00/XX])
    ([01/00] [00/00]) u ([01/11] [00/10]) = ([01/XX] [00/X0])
    ([01/00] [00/00]) u ([01/10] [00/11]) = ([01/X0] [00/XX])
    ([01/00] [00/00]) u ([01/10] [00/10]) = ([01/X0] [00/X0])
    ([01/00] [00/01]) u ([01/11] [00/11]) = ([01/XX] [00/X1])
    ([01/00] [00/01]) u ([01/11] [00/10]) = ([01/XX] [00/Xx])
    ([01/00] [00/01]) u ([01/10] [00/11]) = ([01/X0] [00/X1])
    ([01/00] [00/01]) u ([01/10] [00/10]) = ([01/X0] [00/Xx])
    ([01/00] [00/01]) u ([11/01] [11/00]) = ([X1/00] [XX/01])
    ([01/00] [00/01]) u ([10/00] [11/01]) = ([Xx/00] [XX/01])
    ([01/00] [00/01]) u ([10/01] [11/00]) = ([X1/00] [X0/01])
    ([01/00] [00/01]) u ([10/01] [10/00]) = ([Xx/00] [X0/01])
    ([01/01] [00/00]) u ([01/11] [00/11]) = ([01/X1] [00/XX])
    ([01/01] [00/00]) u ([01/11] [00/10]) = ([01/X1] [00/X0])
    ([01/01] [00/00]) u ([01/10] [00/11]) = ([01/Xx] [00/XX])
    ([01/01] [00/00]) u ([01/10] [00/10]) = ([01/Xx] [00/X0])
    ([01/01] [00/00]) u ([11/01] [11/00]) = ([X1/01] [XX/00])
    ([01/01] [00/00]) u ([10/00] [11/01]) = ([X1/01] [X0/00])
    ([01/01] [00/00]) u ([10/01] [11/00]) = ([Xx/01] [XX/00])
    ([01/01] [00/00]) u ([10/01] [10/00]) = ([Xx/01] [X0/00])
    ([01/01] [00/01]) u ([01/11] [00/11]) = ([01/X1] [00/X1])
    ([01/01] [00/01]) u ([01/11] [00/10]) = ([01/X1] [00/Xx])
    ([01/01] [00/01]) u ([01/10] [00/11]) = ([01/Xx] [00/X1])
    ([01/01] [00/01]) u ([01/10] [00/10]) = ([01/Xx] [00/Xx])
    ([01/01] [01/00]) u ([11/01] [11/00]) = ([X1/01] [X1/00])
    ([01/01] [01/00]) u ([10/00] [11/01]) = ([X1/01] [Xx/00])
    ([01/01] [01/00]) u ([10/01] [11/00]) = ([Xx/01] [X1/00])
    ([01/01] [01/00]) u ([10/01] [10/00]) = ([Xx/01] [Xx/00])
    ([01/11] [00/10]) u ([11/10] [11/11]) = ([X1/11] [XX/10])
    ([01/11] [00/10]) u ([10/11] [11/10]) = ([Xx/11] [XX/10])
    ([01/11] [00/10]) u ([10/10] [11/11]) = ([X1/11] [X0/10])
    ([01/11] [00/10]) u ([10/10] [10/11]) = ([Xx/11] [X0/10])
    ([01/10] [00/11]) u ([11/10] [11/11]) = ([X1/10] [XX/11])
    ([01/10] [00/11]) u ([10/11] [11/10]) = ([X1/10] [X0/11])
    ([01/10] [00/11]) u ([10/10] [11/11]) = ([Xx/10] [XX/11])
    ([01/10] [00/11]) u ([10/10] [10/11]) = ([Xx/10] [X0/11])
    ([01/10] [01/11]) u ([11/10] [11/11]) = ([X1/10] [X1/11])
    ([01/10] [01/11]) u ([10/11] [11/10]) = ([X1/10] [Xx/11])
    ([01/10] [01/11]) u ([10/10] [11/11]) = ([Xx/10] [X1/11])
    ([01/10] [01/11]) u ([10/10] [10/11]) = ([Xx/10] [Xx/11])
    ([10/00] [11/00]) u ([10/11] [11/11]) = ([10/XX] [11/XX])
    ([10/00] [11/00]) u ([10/11] [11/10]) = ([10/XX] [11/X0])
    ([10/00] [11/00]) u ([10/10] [11/11]) = ([10/X0] [11/XX])
    ([10/00] [11/00]) u ([10/10] [11/10]) = ([10/X0] [11/X0])
    ([10/00] [11/01]) u ([10/11] [11/11]) = ([10/XX] [11/X1])
    ([10/00] [11/01]) u ([10/11] [11/10]) = ([10/XX] [11/Xx])
    ([10/00] [11/01]) u ([10/10] [11/11]) = ([10/X0] [11/X1])
    ([10/00] [11/01]) u ([10/10] [11/10]) = ([10/X0] [11/Xx])
    ([10/01] [11/00]) u ([10/11] [11/11]) = ([10/X1] [11/XX])
    ([10/01] [11/00]) u ([10/11] [11/10]) = ([10/X1] [11/X0])
    ([10/01] [11/00]) u ([10/10] [11/11]) = ([10/Xx] [11/XX])
    ([10/01] [11/00]) u ([10/10] [11/10]) = ([10/Xx] [11/X0])
    ([10/01] [11/01]) u ([10/11] [11/11]) = ([10/X1] [11/X1])
    ([10/01] [11/01]) u ([10/11] [11/10]) = ([10/X1] [11/Xx])
    ([10/01] [11/01]) u ([10/10] [11/11]) = ([10/Xx] [11/X1])
    ([10/01] [11/01]) u ([10/10] [11/10]) = ([10/Xx] [11/Xx])
Number rule pair unions = 64
 
 ;; Finished loading #p"main.lisp"
T

>

Note: The number of bits can be changed on line 26 of the file main.lisp.
